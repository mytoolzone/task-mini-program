basePath: /v1
definitions:
  app_code.CodeType:
    enum:
    - success
    - user_not_found
    - password_error
    - service_error
    - auth_failed
    - wx_auth_failed
    - token_not_set
    - repeat
    - token_timeout
    - forbidden
    - user_exist
    - update_user_setting
    - get_user_setting
    - task_not_found
    - task_exist
    - bad_request
    - not_image
    - audit_param_invalid
    - not_found
    - task_run_not_found
    - create_task
    type: string
    x-enum-varnames:
    - Success
    - ErrorUserNotFound
    - ErrorUserPassword
    - ErrorServerError
    - ErrorAuthFailed
    - ErrorWxAuthFailed
    - ErrorTokenNotSet
    - ErrorRepeat
    - ErrorTokenTimeout
    - ErrorForbidden
    - ErrorUserExist
    - ErrorUpdateUserSetting
    - ErrorGetUserSetting
    - ErrorTaskNotFound
    - ErrorTaskExist
    - ErrorBadRequest
    - ErrorNotImage
    - ErrorAuditParamInValid
    - ErrorNotFound
    - ErrorTaskRunNotFound
    - ErrorCreateTask
  entity.Notice:
    properties:
      content:
        type: string
      created_at:
        type: string
      id:
        type: integer
      status:
        type: string
      title:
        type: string
      user_id:
        type: integer
    type: object
  entity.Task:
    properties:
      create_by:
        type: integer
      created_at:
        type: string
      describe:
        type: string
      finished_at:
        type: string
      id:
        type: integer
      location:
        type: string
      name:
        type: string
      require:
        type: string
      status:
        type: string
    type: object
  entity.TaskRun:
    properties:
      created_at:
        type: string
      duration:
        type: integer
      end_at:
        type: string
      id:
        type: integer
      start_at:
        type: string
      status:
        type: string
      task_id:
        type: integer
    type: object
  entity.TaskRunLog:
    properties:
      content:
        type: string
      created_at:
        type: string
      id:
        type: integer
      images:
        type: string
      task_id:
        type: integer
      task_run_id:
        type: integer
      user_id:
        type: integer
      videos:
        type: string
    type: object
  entity.User:
    properties:
      created_at:
        type: string
      deleted_at:
        $ref: '#/definitions/gorm.DeletedAt'
      email:
        type: string
      ext:
        type: string
      id:
        type: integer
      openid:
        type: string
      password:
        type: string
      phone:
        type: string
      status:
        type: string
      updated_at:
        type: string
      username:
        type: string
    type: object
  entity.UserSetting:
    properties:
      address:
        type: string
      birthday:
        type: string
      education:
        type: string
      email:
        type: string
      emergency_contact:
        type: string
      emergency_phone:
        type: string
      emergency_relationship:
        type: string
      idcard:
        type: string
      insurance_end:
        type: string
      insurance_name:
        type: string
      insurance_photo:
        type: string
      insurance_start:
        type: string
      intro:
        type: string
      intro_user_id:
        type: string
      login_name:
        type: string
      married:
        type: string
      mingzu:
        type: string
      name:
        type: string
      phone:
        type: string
      region:
        type: string
      sex:
        type: string
      user_id:
        type: string
      wechat_name:
        type: string
      work_category:
        type: string
    type: object
  entity.UserTask:
    properties:
      created_at:
        type: string
      id:
        type: integer
      role:
        type: string
      status:
        type: string
      task:
        $ref: '#/definitions/entity.Task'
      task_id:
        type: integer
      user:
        $ref: '#/definitions/entity.User'
      user_id:
        type: integer
    type: object
  entity.UserTaskSummary:
    properties:
      total_duration:
        type: integer
      total_task:
        type: integer
    type: object
  gorm.DeletedAt:
    properties:
      time:
        type: string
      valid:
        description: Valid is true if Time is not NULL
        type: boolean
    type: object
  http_util.Response:
    properties:
      code:
        allOf:
        - $ref: '#/definitions/app_code.CodeType'
        example: success
      data: {}
      error:
        example: error message
        type: string
    type: object
  v1.Task:
    properties:
      describe:
        type: string
      location:
        type: string
      name:
        type: string
      require:
        type: string
    type: object
  v1.UploadRunLogRequest:
    properties:
      content:
        type: string
      images:
        items:
          type: string
        type: array
      taskID:
        type: integer
      videos:
        items:
          type: string
        type: array
    type: object
  v1.doLoginRequest:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  v1.doLoginResponse:
    properties:
      role:
        type: string
      token:
        type: string
      userId:
        type: integer
      username:
        type: string
    type: object
  v1.doMiniProgramLoginRequest:
    properties:
      code:
        type: string
    required:
    - code
    type: object
  v1.doMiniProgramLoginResponse:
    properties:
      phone:
        type: string
      role:
        type: string
      token:
        type: string
      userId:
        type: integer
      username:
        type: string
    type: object
  v1.doRegisterRequest:
    properties:
      password:
        type: string
      phone:
        type: string
      setting:
        $ref: '#/definitions/entity.UserSetting'
      username:
        type: string
    required:
    - password
    - username
    type: object
  v1.doRegisterResponse:
    properties:
      userId:
        type: integer
    type: object
  v1.doUploadFileResponse:
    properties:
      url:
        type: string
    type: object
host: task.mytool.zone
info:
  contact: {}
  description: Task Mini Program API
  title: Task Mini Program
  version: "1.0"
paths:
  /file/upload:
    post:
      consumes:
      - multipart/form-data
      description: 上传文件
      parameters:
      - description: 文件
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/http_util.Response'
            - properties:
                data:
                  $ref: '#/definitions/v1.doUploadFileResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/http_util.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/http_util.Response'
      summary: 上传文件
      tags:
      - 文件
  /notice/detail:
    get:
      consumes:
      - application/json
      description: 获取用户通知详情
      parameters:
      - description: jwt_token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 通知ID
        in: query
        name: noticeID
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/http_util.Response'
            - properties:
                data:
                  $ref: '#/definitions/entity.Notice'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/http_util.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/http_util.Response'
      summary: 获取用户通知详情
      tags:
      - 通知
  /notice/list:
    get:
      consumes:
      - application/json
      description: 获取用户通知列表
      parameters:
      - description: jwt_token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/http_util.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/entity.Notice'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/http_util.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/http_util.Response'
      summary: 获取用户通知列表
      tags:
      - 通知
  /task/apply:
    post:
      consumes:
      - application/json
      description: 用户申请参加任务
      operationId: apply-task
      parameters:
      - description: jwt_token
        in: header
        name: Authorization
        required: true
        type: string
      - description: taskID
        in: query
        name: taskID
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/http_util.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/http_util.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/http_util.Response'
      summary: Apply task
      tags:
      - task
  /task/approvedUsers:
    get:
      consumes:
      - application/json
      description: 获取任务参加人列表获取某个任务，已经审核通过的人列表, (1. 该接口用在分配角色环节. 2. 查看参加任务用户的角色）
      operationId: approvedUsers-list
      parameters:
      - description: jwt_token
        in: header
        name: Authorization
        required: true
        type: string
      - description: taskID
        in: query
        name: taskID
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/http_util.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/entity.UserTask'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/http_util.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/http_util.Response'
      summary: approvedUsers list
      tags:
      - task
  /task/assignRole:
    post:
      consumes:
      - application/json
      description: 管理员分配任务角色
      operationId: assign-role
      parameters:
      - description: jwt_token
        in: header
        name: Authorization
        required: true
        type: string
      - description: taskID
        in: query
        name: taskID
        required: true
        type: integer
      - description: userID
        in: query
        name: userID
        required: true
        type: integer
      - description: role
        enum:
        - leader
        - member
        - recorder
        in: query
        name: role
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/http_util.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/http_util.Response'
      summary: Assign role
      tags:
      - task
  /task/auditApplyTask:
    post:
      consumes:
      - application/json
      description: 管理员审核用户参加任务
      operationId: audit-user-task
      parameters:
      - description: jwt_token
        in: header
        name: Authorization
        required: true
        type: string
      - description: taskID
        in: query
        name: taskID
        required: true
        type: integer
      - description: userID
        in: query
        name: userID
        required: true
        type: integer
      - description: auditStatus
        enum:
        - rejected
        - approved
        in: query
        name: auditStatus
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/http_util.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/http_util.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/http_util.Response'
      summary: Audit user task
      tags:
      - task
  /task/auditTask:
    post:
      consumes:
      - application/json
      description: 管理员审核任务
      operationId: audit-task
      parameters:
      - description: jwt_token
        in: header
        name: Authorization
        required: true
        type: string
      - description: taskID
        in: query
        name: taskID
        required: true
        type: integer
      - description: auditStatus
        enum:
        - rejected
        - approved
        in: query
        name: auditStatus
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/http_util.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/http_util.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/http_util.Response'
      summary: Audit task
      tags:
      - task
  /task/cancel:
    post:
      consumes:
      - application/json
      description: 取消任务
      operationId: cancel-task
      parameters:
      - description: jwt_token
        in: header
        name: Authorization
        required: true
        type: string
      - description: taskID
        in: query
        name: taskID
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/http_util.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/http_util.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/http_util.Response'
      summary: Cancel task
      tags:
      - task
  /task/create:
    post:
      consumes:
      - application/json
      description: 创建任务
      operationId: create-task
      parameters:
      - description: jwt_token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 创建任务
        in: body
        name: jsonBody
        required: true
        schema:
          $ref: '#/definitions/v1.Task'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/http_util.Response'
            - properties:
                data:
                  $ref: '#/definitions/entity.Task'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/http_util.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/http_util.Response'
      summary: Create task
      tags:
      - task
  /task/currentUserRole:
    get:
      consumes:
      - application/json
      description: 获取当前访问用户在某个任务的角色
      operationId: currentUserRole
      parameters:
      - description: jwt_token
        in: header
        name: Authorization
        required: true
        type: string
      - description: taskID
        in: query
        name: taskID
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/http_util.Response'
            - properties:
                data:
                  $ref: '#/definitions/entity.UserTask'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/http_util.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/http_util.Response'
      summary: currentUserRole
      tags:
      - task
  /task/detail:
    get:
      consumes:
      - application/json
      description: 获取任务详情
      operationId: detail
      parameters:
      - description: jwt_token
        in: header
        name: Authorization
        required: true
        type: string
      - description: taskID
        in: query
        name: taskID
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/http_util.Response'
            - properties:
                data:
                  $ref: '#/definitions/entity.Task'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/http_util.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/http_util.Response'
      summary: Show task detail
      tags:
      - task
  /task/finish:
    post:
      consumes:
      - application/json
      description: 完成任务
      operationId: finish-task
      parameters:
      - description: jwt_token
        in: header
        name: Authorization
        required: true
        type: string
      - description: taskID
        in: query
        name: taskID
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/http_util.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/http_util.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/http_util.Response'
      summary: Finish task
      tags:
      - task
  /task/list:
    get:
      consumes:
      - application/json
      description: 获取任务列表
      operationId: list
      parameters:
      - description: jwt_token
        in: header
        name: Authorization
        required: true
        type: string
      - description: lastID
        in: query
        name: lastID
        type: integer
      - description: status
        enum:
        - torun
        - audit_fail
        - join
        - new
        - running
        - paused
        - finished
        - canceled
        - deleted
        in: query
        name: status
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/http_util.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/entity.Task'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/http_util.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/http_util.Response'
      summary: List tasks
      tags:
      - task
  /task/pause:
    post:
      consumes:
      - application/json
      description: 暂停任务
      operationId: pause-task
      parameters:
      - description: jwt_token
        in: header
        name: Authorization
        required: true
        type: string
      - description: taskID
        in: query
        name: taskID
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/http_util.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/http_util.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/http_util.Response'
      summary: Pause task
      tags:
      - task
  /task/prepare:
    get:
      consumes:
      - application/json
      description: 获取签到二维码
      operationId: prepare-task
      parameters:
      - description: jwt_token
        in: header
        name: Authorization
        required: true
        type: string
      - description: taskID
        in: query
        name: taskID
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/http_util.Response'
            - properties:
                data:
                  $ref: '#/definitions/entity.TaskRun'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/http_util.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/http_util.Response'
      summary: Prepare task
      tags:
      - task
  /task/runLogs:
    get:
      consumes:
      - application/json
      description: 获取任务运行日志列表
      operationId: run-log-list
      parameters:
      - description: jwt_token
        in: header
        name: Authorization
        required: true
        type: string
      - description: taskID
        in: query
        name: taskID
        required: true
        type: integer
      - description: lastID
        in: query
        name: lastID
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/http_util.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/entity.TaskRunLog'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/http_util.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/http_util.Response'
      summary: Run log list
      tags:
      - task
  /task/sign:
    post:
      consumes:
      - application/json
      description: 签到
      operationId: sign-task
      parameters:
      - description: jwt_token
        in: header
        name: Authorization
        required: true
        type: string
      - description: taskID
        in: query
        name: taskID
        required: true
        type: integer
      - description: taskRunID
        in: query
        name: taskRunID
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/http_util.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/http_util.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/http_util.Response'
      summary: Sign task
      tags:
      - task
  /task/start:
    post:
      consumes:
      - application/json
      description: 开始任务
      operationId: start-task
      parameters:
      - description: jwt_token
        in: header
        name: Authorization
        required: true
        type: string
      - description: taskID
        in: query
        name: taskRunID
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/http_util.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/http_util.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/http_util.Response'
      summary: Start task
      tags:
      - task
  /task/uploadRunLog:
    post:
      consumes:
      - application/json
      description: 上报任务运行日志列表
      operationId: upload-run-log
      parameters:
      - description: jwt_token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 上报任务运行日志
        in: body
        name: jsonBody
        required: true
        schema:
          $ref: '#/definitions/v1.UploadRunLogRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/http_util.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/http_util.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/http_util.Response'
      summary: Upload run log
      tags:
      - task
  /task/userJoinTask:
    get:
      consumes:
      - application/json
      description: 获取某人参加的任务列表
      operationId: user-join-tasks
      parameters:
      - description: jwt_token
        in: header
        name: Authorization
        required: true
        type: string
      - description: userID
        in: query
        name: userID
        required: true
        type: integer
      - description: lastID
        in: query
        name: lastID
        type: integer
      - description: status
        in: query
        name: status
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/http_util.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/entity.Task'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/http_util.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/http_util.Response'
      summary: User task list
      tags:
      - task
  /task/userTasks:
    get:
      consumes:
      - application/json
      description: 获取某人创建的任务列表
      operationId: user-task-list
      parameters:
      - description: jwt_token
        in: header
        name: Authorization
        required: true
        type: string
      - description: userID
        in: query
        name: userID
        required: true
        type: integer
      - description: lastID
        in: query
        name: lastID
        type: integer
      - description: status
        in: query
        name: status
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/http_util.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/entity.Task'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/http_util.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/http_util.Response'
      summary: User task list
      tags:
      - task
  /task/users:
    get:
      consumes:
      - application/json
      description: 获取任务报名用户列表
      operationId: apply-user-list
      parameters:
      - description: jwt_token
        in: header
        name: Authorization
        required: true
        type: string
      - description: taskID
        in: query
        name: taskID
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/http_util.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/entity.UserTask'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/http_util.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/http_util.Response'
      summary: Apply Task User list
      tags:
      - task
  /user/getSetting:
    get:
      consumes:
      - application/json
      description: 获取用户设置
      parameters:
      - description: jwt_token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/http_util.Response'
            - properties:
                data:
                  $ref: '#/definitions/entity.UserSetting'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/http_util.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/http_util.Response'
      summary: 获取用户设置
      tags:
      - 用户
  /user/login:
    post:
      consumes:
      - application/json
      description: 登录
      parameters:
      - description: 登录参数
        in: body
        name: jsonBody
        required: true
        schema:
          $ref: '#/definitions/v1.doLoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/http_util.Response'
            - properties:
                data:
                  $ref: '#/definitions/v1.doLoginResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/http_util.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/http_util.Response'
      summary: 登录
      tags:
      - 用户
  /user/miniProgramLogin:
    post:
      consumes:
      - application/json
      description: 小程序登录
      parameters:
      - description: 登录参数
        in: body
        name: jsonBody
        required: true
        schema:
          $ref: '#/definitions/v1.doMiniProgramLoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/http_util.Response'
            - properties:
                data:
                  $ref: '#/definitions/v1.doMiniProgramLoginResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/http_util.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/http_util.Response'
      summary: 小程序登录
      tags:
      - 用户
  /user/register:
    post:
      consumes:
      - application/json
      description: 注册
      parameters:
      - description: 注册参数
        in: body
        name: jsonBody
        required: true
        schema:
          $ref: '#/definitions/v1.doRegisterRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/http_util.Response'
            - properties:
                data:
                  $ref: '#/definitions/v1.doRegisterResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/http_util.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/http_util.Response'
      summary: 注册
      tags:
      - 用户
  /user/updateSetting:
    post:
      consumes:
      - application/json
      description: 更新用户设置
      parameters:
      - description: jwt_token
        in: header
        name: Authorization
        required: true
        type: string
      - description: 用户设置
        in: body
        name: jsonBody
        required: true
        schema:
          $ref: '#/definitions/entity.UserSetting'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/http_util.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/http_util.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/http_util.Response'
      summary: 更新用户设置
      tags:
      - 用户
swagger: "2.0"
